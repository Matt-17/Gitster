<UserControl x:Class="Gitster.Controls.DatePickerPopup"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:models="clr-namespace:Gitster.Models"
             xmlns:converters="clr-namespace:Gitster.Converters"
             xmlns:controls="clr-namespace:Gitster.Controls"
             xmlns:viewModels="clr-namespace:Gitster.ViewModels"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=viewModels:DateControlViewModel}"
             d:DesignHeight="300" d:DesignWidth="230">
    <UserControl.Resources>
        <converters:BoolConverter x:Key="BoolConverterVisible" Type="Visible"/>
        <converters:BoolConverter x:Key="BoolConverterCollapsed" Type="Collapsed"/>
        <converters:BoolConverter x:Key="BoolConverterFontWeightBold" Type="FontWeightBold"/>
        <converters:BoolConverter x:Key="BoolConverterOpaque" Type="Opaque"/>
        <Style x:Key="HoverStyle" TargetType="Border">
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="Border.IsMouseOver" Value="True">
                    <Setter Property="Border.Background" Value="{DynamicResource HoverBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    
    <Border Background="White" BorderBrush="{DynamicResource AccentMainBrush}" BorderThickness="2" SnapsToDevicePixels="True" MouseWheel="MonthOnMouseWheel">
        <StackPanel>
            <Grid Height="28">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" MouseDown="MonthOnMouseDown" MouseUp="OnMouseUp" MouseEnter="OnMouseEnter" MouseLeave="OnMouseLeave" ToolTip="Ändern mit Maustasten&#x0a;Zurück - links&#x0a;Vorwärts - rechts" ToolTipService.InitialShowDelay="0">
                    <TextBlock Text="{Binding Date, StringFormat='MMMM'}" FontSize="18" TextAlignment="Center" VerticalAlignment="Center"/>
                </Border>
                <Border Grid.Column="1" MouseDown="YearOnMouseDown" MouseUp="OnMouseUp" MouseEnter="OnMouseEnter" MouseLeave="OnMouseLeave" MouseWheel="YearOnMouseWheel" ToolTip="Ändern mit Maustasten&#x0a;Zurück - links&#x0a;Vorwärts - rechts" ToolTipService.InitialShowDelay="0">
                    <TextBlock Text="{Binding Date, StringFormat='yyyy'}" TextAlignment="Center" FontSize="18" VerticalAlignment="Center"/>
                </Border>
            </Grid>

            <Border Background="{DynamicResource AccentMainBrush}" Padding="10, 2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Mo" TextAlignment="Center" Width="25" FontWeight="Bold" FontSize="9" Opacity="0.8" Foreground="White"/>
                    <TextBlock Grid.Column="1" Text="Di" TextAlignment="Center" Width="25" FontWeight="Bold" FontSize="9" Opacity="0.8" Foreground="White"/>
                    <TextBlock Grid.Column="2" Text="Mi" TextAlignment="Center" Width="25" FontWeight="Bold" FontSize="9" Opacity="0.8" Foreground="White"/>
                    <TextBlock Grid.Column="3" Text="Do" TextAlignment="Center" Width="25" FontWeight="Bold" FontSize="9" Opacity="0.8" Foreground="White"/>
                    <TextBlock Grid.Column="4" Text="Fr" TextAlignment="Center" Width="25" FontWeight="Bold" FontSize="9" Opacity="0.8" Foreground="White"/>
                    <TextBlock Grid.Column="5" Text="Sa" TextAlignment="Center" Width="25" FontWeight="Bold" FontSize="9" Opacity="0.6" Foreground="White"/>
                    <TextBlock Grid.Column="6" Text="So" TextAlignment="Center" Width="25" FontWeight="Bold" FontSize="9" Opacity="0.6" Foreground="White"/>
                </Grid>
            </Border>
            <ItemsControl ItemsSource="{Binding Days}" MaxWidth="210" Margin="10, 0">
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type models:DateTimeHolder}">
                        <Border Width="30" Height="28" Style="{DynamicResource HoverStyle}" MouseDown="DayOnMouseDown">
                            <Grid>
                                <Border Visibility="{Binding IsSelected, Converter={StaticResource BoolConverterVisible}}" Background="{DynamicResource AccentMainBrush}" >
                                    <TextBlock Text="{Binding Date, StringFormat='dd'}" TextAlignment="Center" VerticalAlignment="Center" Foreground="White"
                                           FontWeight="{Binding IsToday, Converter={StaticResource BoolConverterFontWeightBold}}"
                                           Opacity="{Binding IsSelectedMonth, Converter={StaticResource BoolConverterOpaque}}"/>
                                </Border>
                                <TextBlock Text="{Binding Date, StringFormat='dd'}" TextAlignment="Center" VerticalAlignment="Center"  Visibility="{Binding IsSelected, Converter={StaticResource BoolConverterCollapsed}}"
                                               FontWeight="{Binding IsToday, Converter={StaticResource BoolConverterFontWeightBold}}"
                                               Opacity="{Binding IsSelectedMonth, Converter={StaticResource BoolConverterOpaque}}"/>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>

            <!-- Time Editor Section (visible when EditMode != DateOnly) -->
            <Grid Margin="10,10,10,5">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding EditMode}" Value="{x:Static controls:EditMode.DateTime}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding EditMode}" Value="{x:Static controls:EditMode.TimeOnly}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Hour Section -->
                <Border Grid.Column="0" MinWidth="50" Height="28" BorderBrush="{DynamicResource AccentMainBrush}" BorderThickness="1" 
                        MouseDown="HourOnMouseDown" MouseUp="OnMouseUp" MouseEnter="OnMouseEnter" MouseLeave="OnMouseLeave" 
                        MouseWheel="HourOnMouseWheel" ToolTip="Stunden ändern&#x0a;Zurück - links&#x0a;Vorwärts - rechts" 
                        ToolTipService.InitialShowDelay="0" Background="Transparent">
                    <TextBlock Text="{Binding Hour, StringFormat='00'}" TextAlignment="Center" VerticalAlignment="Center" FontSize="16"/>
                </Border>

                <!-- Separator -->
                <TextBlock Grid.Column="1" Text=":" VerticalAlignment="Center" Margin="5,0" FontSize="16" FontWeight="Bold"/>

                <!-- Minute Section -->
                <Border Grid.Column="2" MinWidth="50" Height="28" BorderBrush="{DynamicResource AccentMainBrush}" BorderThickness="1" 
                        MouseDown="MinuteOnMouseDown" MouseUp="OnMouseUp" MouseEnter="OnMouseEnter" MouseLeave="OnMouseLeave" 
                        MouseWheel="MinuteOnMouseWheel" ToolTip="Minuten ändern&#x0a;Zurück - links&#x0a;Vorwärts - rechts" 
                        ToolTipService.InitialShowDelay="0" Background="Transparent">
                    <TextBlock Text="{Binding Minute, StringFormat='00'}" TextAlignment="Center" VerticalAlignment="Center" FontSize="16"/>
                </Border>
            </Grid>

            <!-- Buttons Section -->
            <Grid Margin="10,0,10,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Jetzt Button (visible when EditMode != DateOnly) -->
                <Button Grid.Column="0" Content="Jetzt" Click="Now_Click" Height="24" Padding="5,2" 
                        ToolTip="Aktuelles Datum und Uhrzeit">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding EditMode}" Value="{x:Static controls:EditMode.DateTime}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding EditMode}" Value="{x:Static controls:EditMode.TimeOnly}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </StackPanel>
    </Border>
</UserControl>
